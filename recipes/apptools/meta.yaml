{% set name = "apptools" %}
{% set version = "4.4.0" %}
{% set file_ext = "tar.bz2" %}
{% set hash_type = "sha256" %}
{% set hash_value = "bb61c54a5043a8beda68129b0aab3cc47f4a5eb6bc3671cc0e14461637c398d1" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  host:
    - python
    - setuptools
    - traitsui
    - configobj
  run:
    - python
    - traitsui
    - configobj

test:
  imports:
    - apptools
    - apptools.appscripting
    - apptools.appscripting.action
    - apptools.help
    - apptools.help.help_plugin
    - apptools.help.help_plugin.action
    - apptools.io
    - apptools.io.h5
    - apptools.io.h5.tests
    - apptools.logger
    - apptools.logger.agent
    - apptools.logger.plugin
    - apptools.logger.plugin.view
    - apptools.lru_cache
    - apptools.lru_cache.tests
    - apptools.naming
    - apptools.naming.adapter
    - apptools.naming.trait_defs
    - apptools.naming.ui
    - apptools.permissions
    - apptools.permissions.action
    - apptools.permissions.adapters
    - apptools.permissions.default
    - apptools.persistence
    - apptools.preferences
    - apptools.preferences.tests
    - apptools.preferences.ui
    - apptools.scripting
    - apptools.selection
    - apptools.selection.tests
    - apptools.sweet_pickle
    - apptools.sweet_pickle.tests
    - apptools.template
    - apptools.template.impl
    - apptools.template.test
    - apptools.type_manager
    - apptools.type_registry
    - apptools.type_registry.tests
    - apptools.undo
    - apptools.undo.action
    - apptools.undo.tests

about:
  home: https://docs.enthought.com/apptools
  license: BSD License
  license_family: BSD
  license_file: ''
  summary: application tools
  description: "===========================\napptools: application tools\n===========================\n\n.. image:: https://api.travis-ci.org/enthought/apptools.png?branch=master\n   :target: https://travis-ci.org/enthought/apptools\n\
    \   :alt: Build status\n\n.. image:: http://codecov.io/github/enthought/apptools/coverage.svg?branch=master\n   :target: http://codecov.io/github/enthought/apptools?branch=master\n   :alt: Coverage\
    \ report\n\nDocumentation: http://docs.enthought.com/apptools\n\nSource Code: http://www.github.com/enthought/apptools\n\n\nThe apptools project includes a set of packages that Enthought has found\n\
    useful in creating a number of applications.  They implement functionality\nthat is commonly needed by many applications\n\n- **apptools.appscripting**: Framework for scripting applications.\n- **apptools.help**:\
    \ Provides a plugin for displaying documents and examples\n  and running demos in Envisage Workbench applications.\n- **apptools.io**: Provides an abstraction for files and folders in a file\n  system.\n\
      - **apptools.logger**: Convenience functions for creating logging handlers\n- **apptools.naming**: Manages naming contexts, supporting non-string data\n  types and scoped preferences\n- **apptools.permissions**:\
    \ Supports limiting access to parts of an\n  application unless the user is appropriately authorised (not full-blown\n  security).\n- **apptools.persistence**: Supports pickling the state of a Python\
    \ object\n  to a dictionary, which can then be flexibly applied in restoring the state of\n  the object.\n- **apptools.preferences**: Manages application preferences.\n- **apptools.selection**: Manages\
    \ the communication between providers and\n  listener of selected items in an application.\n- **apptools.scripting**: A framework for automatic recording of Python\n  scripts.\n- **apptools.sweet_pickle**:\
    \ Handles class-level versioning, to support\n  loading of saved data that exist over several generations of internal class\n  structures.\n- **apptools.template**: Supports creating templatizable object\
    \ hierarchies.\n- **apptools.type_manager**: Manages type extensions, including factories\n  to generate adapters, and hooks for methods and functions.\n- **apptools.undo**: Supports undoing and scripting\
    \ application commands.\n\nPrerequisites\n-------------\n\nAll packages in apptools require:\n\n* `traits <https://github.com/enthought/traits>`_\n\nThe `apptools.preferences` package requires:\n\n\
    * `configobj <http://pypi.python.org/pypi/configobj>`_\n\nMany of the packages provide optional user interfaces using Pyface and\nTraitsui. In additon, many of the packages are designed to work with\
    \ the\nEnvisage plug-in system, althought most can be used independently:\n\n* `envisage <https://github.com/enthought/envisage>`_\n* `pyface <https://github.com/enthought/pyface>`_\n* `traitsui <https://github.com/enthought/traitsui>`_"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
