{% set name = "cornice" %}
{% set version = "3.4.0" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "5833582e7ff74ad6fe059bd22792cfeaff85aa0e2c37402b4adb0ae673d78ef7" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  host:
    - python
    - setuptools
    - pyramid >=1.7
    - simplejson
    - six
    - venusian
  run:
    - python
    - pyramid >=1.7
    - simplejson
    - six
    - venusian

test:
  imports:
    - cornice
    - cornice.validators

about:
  home: https://github.com/mozilla-services/cornice
  license: Mozilla Public License 2.0 (MPL 2.0)
  license_family: OTHER
  license_file: ''
  summary: Define Web Services in Pyramid.
  description: "=======\nCornice\n=======\n\n|readthedocs| |pypi| |travis| |master-coverage|\n\n.. |travis| image:: https://travis-ci.org/Cornices/cornice.svg?branch=master\n    :target: https://travis-ci.org/Cornices/cornice\n\
    \n.. |readthedocs| image:: https://readthedocs.org/projects/cornice/badge/?version=latest\n    :target: https://cornice.readthedocs.io/en/latest/\n    :alt: Documentation Status\n\n.. |master-coverage|\
    \ image::\n    https://coveralls.io/repos/Cornices/cornice/badge.svg?branch=master\n    :alt: Coverage\n    :target: https://coveralls.io/r/Cornices/cornice\n\n.. |pypi| image:: https://img.shields.io/pypi/v/cornice.svg\n\
    \    :target: https://pypi.python.org/pypi/cornice\n\n\n**Cornice** provides helpers to build & document Web Services with Pyramid.\n\nThe full documentation is available at: https://cornice.readthedocs.io\n\
    \n\n#########\nCHANGELOG\n#########\n\n3.4.0 (2018-04-12)\n==================\n\n- Add traverse support. For more information regarding Hybrid Applications see\n  `Pyramid documentation <https://docs.pylonsproject.org/projects/pyramid/en/1.9-branch/narr/hybrid.html>`_\n\
    \  (#483).\n\n\n3.3.0 (2018-04-11)\n==================\n\n- Cornice now accepts Marshmallow schemas instead of instances (#482, @ergo)\n- Marshmallow schemas get request object added to their context\n\
    \  during validation (#482, @ergo)\n\n\n3.2.0 (2018-04-03)\n==================\n\n**New features**\n\n- Add marshmallow request validation support (#475, thanks @ergo)\n- Allow to reuse Pyramid existing\
    \ routes in services (#477, thanks @ergo)\n\n**Documentation**\n\n- Make tutorial work for python3 users (#471, thanks @rvandegrift)\n\n**Internal changes**\n\n- Remove configuration commit (#476, thanks\
    \ @ergo)\n- Remove mentions of ``text/json`` in tests and docs (#478, thanks @wjehenddher)\n\n\n3.1.0 (2018-02-08)\n==================\n\n- In addition to the ``colander_body_validator``, there are\
    \ now three more similar validators:\n  ``colander_headers_validator``, ``colander_path_validator``, and\n  ``colander_querystring_validator``.\n- six is now a required dependency.\n\n\n3.0.0 (2017-10-20)\n\
    ==================\n\n**Breaking changes**\n\n Please refer to `upgrading docs <https://cornice.readthedocs.io/en/stable/upgrading.html>`_ for detailed migration instructions.\n\n- ``acl`` and ``traverse``\
    \ parameters are not supported anymore on services\n- Constructors of resource decorated classed must now be ``__init__(self, request, context=None)``\n\n**Enhancements**\n\n- Align Cornice with Pyramid\
    \ ACL pattern: Dynamic ACLs based\n  on resource are now possible (#452, thanks @wjehenddher)\n\n**Bug fixes**\n\n- Disable CSRF check on predicate fallback view (fixes #458)\n- Fix to use own validator\
    \ for Header Accept (fixes #431)\n\n\n2.4.0 (2017-01-19)\n==================\n\n**Enhancements**\n\n- Add support for arrays on request body top level.\n\n\n2.3.0 (2016-12-15)\n==================\n\n\
    **Enhancements**\n\n- Add support for validation with specific JSON Content-Types\n  (i.e application/merge-patch+json).\n- Add ``X-Content-Type-Options: nosniff`` headers to responses (fixes #102)\n\
      - Add a ``request.current_service`` attribute (fixes #105)\n\n**Bug fixes**\n\n- Fix ``cornice.cors.get_cors_preflight_view`` to make it parse\n  `Access-Control-Request-Headers` header correctly event\
    \ if its value\n  contains zero number of white spaces between commas (#422)\n\n**Internal changes**\n\n- Clean-up an inconsistency in ``cornice.service.decorate_view()`` function\n  where ``acl`` and\
    \ ``factory`` were expected as view arguments (whereas\n  deprecated since 1.0)\n\n\n2.2.0 (2016-11-25)\n==================\n\n**Enhancements**\n\n- Add support of custom predicates in resources (#344,\
    \ thanks @VDigitall!)\n\n**Internal changes**\n\n- Assert proper behaviour of UTF-8 content JSON body (#366, thanks @thruflo!)\n\n\n2.1.0 (2016-10-28)\n==================\n\n**Enhancements**\n\n- ``Cornice.validators.colander_validator``\
    \ and\n  ``cornice.validators.colander_body_validator`` now accept colander\n  schema node instances.  Previously only schema classes were\n  accepted.  For some discussion see #412.\n\n**Deprecations**\n\
    \n- Passing schema classes to ``Cornice.validators.colander_validator`` and\n  ``cornice.validators.colander_body_validator`` is now deprecated.\n  (See above.)\n\n**Bug fixes**\n\n- To maintain consistency\
    \ with cornice 1.2 as to the semantics of\n  ``location='path'``, change ``cornice.validators.extract_cstruct``\n  so that it places ``request.matchdict`` (rather than\n  ``request.path``) into ``cstruct['path']``.\
    \ (#411)\n\n- Fix ``cornice.validators.colander_validator`` so that it does\n  nothing if ``schema`` is unset (or set to ``None``.)  Previously\n  (contrary to its docstring) it was raising a ``TypeError``.\n\
    \n**Internal changes**\n\n- Raised test coverage to 100% (#417)\n\nHuge thanks to @dairiki for his help on this release!\n\n\n2.0.2 (2016-10-25)\n==================\n\n**Bug fixes**\n\n* Exclude ``tests``\
    \ from install (#407, thanks @doctaweeks!)\n\n**Internal changes**\n\n- Deprecate ``cornice.util.extract_json_data()`` and ``cornice.util.extract_form_urlencoded_data()``\n  in favor of ``cornice.validators.extract_cstruct()``\
    \ (#409)\n\n2.0.1 (2016-10-24)\n==================\n\n**Bug fixes**\n\n- Fix Colander imports to make sure it remains optional (#400)\n- Fix truncated JSON validation error message when request body\
    \ does not contain\n  valid JSON (#401)\n- Fix docs about upgrading deserializers (#402)\n\n\n2.0.0 (2016-10-20)\n==================\n\n**Breaking changes**\n\n Please refer to `upgrading docs <https://cornice.readthedocs.io/en/stable/upgrading.html>`_\
    \ for detailed migration instructions.\n\n- Dropped Python 2.6 support (#368)\n- Got rid of Buildout files (#369)\n- Got rid of Spore extension (#379)\n- Moved Sphinx extension to dedicated repo (#379)\n\
      - Moved project scaffold to dedicated repo (#238, #390)\n- Completely rework the schema validation features (#376, #386)\n- Moved examples to dedicated repo (#392)\n- Custom ``error_handler`` now receives\
    \ the request instead of errors (#381)\n- Errors list ``request.errors`` has no ``request`` anymore (#372, #378)\n- ``request.errors.add()`` now only accepts one of ``header``, ``body``, ``url``,\n\
    \  ``path``, ``querystring``, ``cookies`` or ``method`` as first argument (#374)\n- Remove deprecated features (#382)\n\n**Internal changes**\n\n- Take ``__version__`` from setup.py (#358)\n- Remove\
    \ duplicated list of test deps in tox file (#371)\n\n\n1.2.1 (2016-03-15)\n==================\n\nBug fixes\n\n- Properly handle content_type callables returning a single internet media type\n  as scalar.\
    \ Thanks @amotl (#343)\n- Do not raise a 415 error when no content-type and no body (#354)\n\nDocumentation\n\n- Improve documentation regarding content type negotiation and media type\n  validation.\
    \ Thanks @amotl (#91, #343, #350)\n- Fix typo in testing docs. Thanks peletiah (#348)\n- Clarify docs for deferred colander validator. Thanks @antoineleclair (#352)\n\n\n1.2.0 (2016-01-18)\n==================\n\
    \n- Adding the ability to define services imperatively. (#335)\n- Clean cornice/statics/ files. (#345)\n\nBug fixes\n\n- Convert ``None`` to ``colander.null``  before calling colander's ``deserialize``\
    \ function. (#342)\n- Allow i18n of colander error messages (#206)\n\n\n1.1.0 (2015-09-29)\n==================\n\n- Warn if resource collection and record paths are not distinct. Thanks\n  @circlingthesun\
    \ (#292)\n\nBug fixes\n\n- Fix duplicated CORS exposed headers (#301)\n- Fix setup.py in template. Thanks @areski (#296)\n- Make resource test less dependent on Pyramid version (#312)\n- Fix reload\
    \ in sphinx extension for Python 3. Thanks @JohnBrodie (#295)\n- Fix usage of Colander ``schema_type()`` and ``schema.typ``. Thanks\n  @tisdall (#309)\n- Fix check for CORS Allow Credentials. Thanks\
    \ @treerao (#320)\n- Fix Access-Control-Max-Age value if undefined on service (#338)\n\nDocumentation\n\n- Fix typos in documentation. Thanks @robvdl, @tisdall (#306, #313)\n- Rewrite quickstart documentation\
    \ (#305)\n- Huge set of documentation improvements. Thanks @areski (#297)\n\n\n1.0.0 (2015-04-15)\n==================\n\nBreaking changes:\n\n- ACLs are now handled per route and not per view. Thanks\
    \ @circlingthesun\n  (#287)\n\nOther changes:\n\n- Display default values in the sphinx documentation extension, Thanks\n  @MikaYuoadas (#284)\n- Add an option to disable Colander schema request binding.\
    \ (#288)\n\n\n0.20.0 (2015-03-17)\n===================\n\n- Service.cors_supported_headers are now filtered by method and CORS options\n  are now handled in a more consistent way (#281).\n\n0.19.0 (2015-03-02)\n\
    ===================\n\n- Keep fields when colander schema set \"unknown=preserve\"\n\n\n0.18.1 (2015-02-26)\n===================\n\n- Fix CORS protocol that was sometimes returning\n  Access-Control-Expose-Headers\
    \ on preflight request.\n\n\n0.18 - 2015-02-24\n=================\n\n- Fix CORS OPTIONS permission when using default_permission (#273)\n- Ensure Colander schemas are a Mapping (#271)\n- Use the tox\
    \ matrix with Travis. (#272)\n- Improve Sphinx documentation for schema attributes (#270)\n- Set CORS headers when an exception is raised (#261)\n- Remove Cornice warning when returning string or array\
    \ instead of JSON (#256)\n- Fix add_view decorator (#215)\n- Handle per view permissions (#248)\n- Handle CORS credentials origin (#263)\n- Let the user choose the default content_type (#262)\n- Fix\
    \ spore documentation (#255)\n- Handle default values in colander schemas (#253)\n\n\n0.17 - 2014-08-28\n=================\n\n- Use a string for the version number (cornice.__version__);\n- Fix handling\
    \ of invalid JSON input;\n- Fix pyramid configurator route_prefix;\n- Fix CORS behavior when using \"*\";\n- Support strict validation of querystring and body;\n- Add support for unflatted in querystring;\n\
      - If colander defines a default value, put it in request.validated;\n- Do not require a permission for the fallback view.\n\n\n0.16.1 - 2013-11-12\n===================\n\n- Added the license in the\
    \ distribution tarball\n- Updated the license headers of the files (to MPL v2.0)\n\n\n0.16 - 2013-11-12\n=================\n\n- Added venusion depth support to cornice.resource #187\n- Add support for\
    \ validation of input content other than JSON against Colander\n  schemas: built-in support of form-urlencoded and configuration hooks for\n  other content types #192\n- Add support for pyramid traversal.\
    \ #196\n- bugfix: schema was only being bound to the first request #197\n- bugfix: can now pass the `decorator` add_view parameter to the Service class #198\n\n\n0.15 - 2013-10-09\n=================\n\
    \n- Add support for dynamic validation schemas for resources.\n- Add support for context factory.\n- Manually commit configuration changes.\n- Add support for Colander's drop object\n- Update sphinxext\
    \ to not display HEAD.\n- Allow for explicitely named services created for resources.\n- Raise exceptions as-is if they are not subclasses of HTTPException.\n- Add a way to opt-out of the exception\
    \ handling.\n\n\n0.14 - 2013-06-06\n=================\n\n- Add validation of the ``Content-Type`` header sent in requests against a list of allowed ingress content types\n- Handle HTTPNotFound and HTTPForbidden\
    \ in Cornice. Fix some wrong behaviour with CORS support.\n- implement \"415 Unsupported Media Type\"\n- Allow Colander schemas with sequence fields in querystring\n- Remove PasteScript from the Cornice\
    \ template.\n- Support imperative colander schemas\n- Update JSON CSRF warning filter with a better regex\n\n\n0.13 - 2013-02-12\n=================\n\n- Added Cross-Origin Resource Sharing (CORS) support.\n\
    \n\n0.12 - 2012-11-21\n=================\n\n- Fix auto-define of HEAD views from GET views.\n- Support for Colander inheritance (introduced in new versions of Colander)\n- Check for errors in the body\
    \ of the view and in validators (was only checking\n  in validators previously)\n- Add a __version__ utility in cornice/__init__.py\n\n\n0.11 - 2012-10-22\n=================\n\n- the sphinx extension\
    \ is now provided by the `cornice.ext.sphinxext` module [not backward-compatible]\n- Add support for SPORE\n- add an optional 'error_handler' to view declarations.\n- Services.default_{validators, filters}\
    \ is now used. (Fix #75)\n\n\n0.10 - 2012-08-29\n=================\n\n- use pcreate rather than paster create.\n- make it possible to add custom values to errors.\n\n\n0.9 - 2012-07-26\n================\n\
    \n- default schema values are assumed to be in the body\n- refactored the internal APIs so we are not using decorators anymore. The\n  service definition is now separated from the service registration\
    \ in the\n  routing mechanism.\n- added class-level validators and filters\n- added documentation about cornice internals\n- deprecated the service.schema attribute. Use service.definitions instead.\n\
    \n\n0.8 - 2012-04-06\n================\n\n- added support for the 'OPTIONS' HTTP Verb\n- allow multiple accept definitions for a service.\n- get validator's docstring for the automatic doc generation\n\
      - fixed non-ascii documentation problems\n- add a way to ignore some modules when scanning with venusian.scan.\n\n\n0.7 - 2012-03-12\n================\n\n- update license to MPL 2.0.\n- renamed cornice.schemas\
    \ to cornice.errors\n- Added `get_view_wrapper` method to Service class to support subclasses\n  wrapping the view callables w/ decorators\n- added buildout support\n- added class-based views and the\
    \ resource decorator\n- make sure we use Pyramid's exceptions. Not Webob's.\n- added filters support\n- added schema support\n- added json xsrf support\n- now errors status can be different from 400.\n\
    \n\n0.6 - 2011-12-21\n================\n\n- various fixes in MANIFEST\n\n\n0.5 - 2011-12-21\n================\n\n- added a tutorial\n- stacked @api decorator are now allowed\n- added a Paster template\
    \ for a quick start\n\n\n0.4 - 2011-12-07\n================\n\n- Added a way to plug validators easily.\n- Fixed documentation\n- Added a way to automatically document Cornice web services\n- Fixed\
    \ license\n- Added a way to specify the accepted Content-Type values. A 406 is raised if\n  needed\n\n\n0.3 - 2011-11-23\n================\n\n- remove singleton \"_defined\" state from Service class;\
    \ this allows service\n  definitions to be loaded into more than one Configurator.\n\n\n0.2 - 2011-11-05\n================\n\n- Fixed the MANIFEST\n\n\n0.1 - 2011-11-03\n================\n\n- Initial\
    \ release\n\n\n"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
