From 1c68631a28cf25afb91794cec24f992108d93bd1 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Wed, 10 Jul 2019 12:23:28 +0200
Subject: [PATCH 11/11] Add sigtimedwait impl for macOS, license unknown

---
 squashfs-tools/unsquashfs_info.c | 35 ++++++++++++++++++++++++++++++++
 1 file changed, 35 insertions(+)

diff --git a/squashfs-tools/unsquashfs_info.c b/squashfs-tools/unsquashfs_info.c
index c8e2b9b..68a0075 100644
--- a/squashfs-tools/unsquashfs_info.c
+++ b/squashfs-tools/unsquashfs_info.c
@@ -94,6 +94,41 @@ void dump_state()
 }
 
 
+#if defined(__MACH__)
+/* Taken from https://groups.google.com/forum/#!topic/comp.unix.programmer/JlTIncgY-vg */
+int sigtimedwait(const sigset_t *set, siginfo_t *info, const struct timespec *timeout) {
+        struct timespec elapsed = { 0, 0 }, rem;
+        sigset_t pending;
+        int signo;
+        long ns;
+
+        do {
+                sigpending(&pending); /* doesn't clear pending queue */
+
+                for (signo = 1; signo < NSIG; signo++) {
+                        if (sigismember(set, signo) && sigismember(&pending, signo)) {
+                                if (info) {
+                                        memset(info, 0, sizeof *info);
+                                        info->si_signo = signo;
+                                }
+
+                                return signo;
+                        }
+                }
+
+                ns = 200000000L; /* 2/10th second */
+                nanosleep(&(struct timespec){ 0, ns }, &rem);
+                ns -= rem.tv_nsec;
+                elapsed.tv_sec += (elapsed.tv_nsec + ns) / 1000000000L;
+                elapsed.tv_nsec = (elapsed.tv_nsec + ns) % 1000000000L;
+        } while (elapsed.tv_sec < timeout->tv_sec || (elapsed.tv_sec == timeout->tv_sec && elapsed.tv_nsec < timeout->tv_nsec));
+
+        errno = EAGAIN;
+
+        return -1;
+} /* sigtimedwait() */
+#endif
+
 void *info_thrd(void *arg)
 {
 	sigset_t sigmask;
-- 
2.20.1 (Apple Git-117)

