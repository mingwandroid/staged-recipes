From ff6f3f685498d33858d9306884962075415ab5f2 Mon Sep 17 00:00:00 2001
From: Tyler Hicks <tyhicks@canonical.com>
Date: Wed, 29 Nov 2017 16:48:23 +0000
Subject: [PATCH] unsquashfs: Preserve times on symlink inodes

This patch fixes a bug that caused symlinks created by unsquashfs to
use the current time for atime and mtime rather than the times present
in the squashfs archive.

The timestamps are set using utimensat(2) which does not dereference the
symlink when the AT_SYMLINK_NOFOLLOW flag is used. The utimensat(2)
system call supports nanosecond precision but that's not needed by
squashfs so timespec.tv_nsec is unconditionally set to 0.

Signed-off-by: Tyler Hicks <tyhicks@canonical.com>
Bug-Ubuntu: https://launchpad.net/bugs/1724152
Forwarded: https://sourceforge.net/p/squashfs/mailman/message/36140758/
---
 squashfs-tools/unsquashfs.c | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

Index: squashfs-tools-4.3/squashfs-tools/unsquashfs.c
===================================================================
--- squashfs-tools-4.3.orig/squashfs-tools/unsquashfs.c
+++ squashfs-tools-4.3/squashfs-tools/unsquashfs.c
@@ -1087,7 +1087,12 @@ int create_inode(char *pathname, struct
 				file_count ++;
 			break;
 		case SQUASHFS_SYMLINK_TYPE:
-		case SQUASHFS_LSYMLINK_TYPE:
+		case SQUASHFS_LSYMLINK_TYPE: {
+			struct timespec times[2] = {
+				{ i->time, 0 },
+				{ i->time, 0 }
+			};
+
 			TRACE("create_inode: symlink, symlink_size %lld\n",
 				i->data);
 
@@ -1101,6 +1106,13 @@ int create_inode(char *pathname, struct
 				break;
 			}
 
+			if (utimensat(AT_FDCWD, pathname, times,
+					AT_SYMLINK_NOFOLLOW) == -1) {
+				ERROR("create_inode: failed to set time on "
+					"%s, because %s\n", pathname,
+					strerror(errno));
+			}
+
 			write_xattr(pathname, i->xattr);
 	
 			if(root_process) {
@@ -1113,6 +1125,7 @@ int create_inode(char *pathname, struct
 
 			sym_count ++;
 			break;
+		}
  		case SQUASHFS_BLKDEV_TYPE:
 	 	case SQUASHFS_CHRDEV_TYPE:
  		case SQUASHFS_LBLKDEV_TYPE:
